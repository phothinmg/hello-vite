/*@jsxRuntime automatic @jsxImportSource preact*/
import {useMDXComponents as _provideComponents} from "@mdx-js/preact";

function _createMdxContent(props) {
  const _components = Object.assign({
    h1: "h1",
    div: "div",
    pre: "pre",
    code: "code",
    span: "span",
    p: "p",
    h2: "h2",
    strong: "strong",
    br: "br",
    ol: "ol",
    li: "li"
  }, _provideComponents(), props.components);
  return <><_components.h1 id="blog">{"Blog"}</_components.h1>{"\n"}<_components.div className="remark-highlight"><_components.pre className="language-tex"><_components.code className="language-tex"><_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{" = "}<_components.span className="token function selector">{"\\left"}</_components.span><_components.span className="token punctuation">{"["}</_components.span><_components.span className="token function selector">{"\\begin"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"array"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"\n  "}<_components.span className="token punctuation">{"{"}</_components.span>{"c"}<_components.span className="token punctuation">{"}"}</_components.span>{"\n  y_1 "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  y_n\n"}<_components.span className="token function selector">{"\\end"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"array"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\right"}</_components.span><_components.span className="token punctuation">{"]"}</_components.span>{"\n"}</_components.code></_components.pre></_components.div>{"\n"}<_components.div className="math math-display">{"\\mathbf{Y} = \\left[\\begin{array}\n  {c}\n  y_1 \\\\\n  . \\\\\n  . \\\\\n  . \\\\\n  y_n\n\\end{array}\\right]"}</_components.div>{"\n"}<_components.p>{"The matrix of regressors "}<_components.span className="math math-inline">{"\\mathbf{X}"}</_components.span>{" is a "}<_components.span className="math math-inline">{"n \\times k"}</_components.span>{" matrix (or each row is a "}<_components.span className="math math-inline">{"k \\times 1"}</_components.span>{" vector),"}</_components.p>{"\n"}<_components.div className="remark-highlight"><_components.pre className="language-latex"><_components.code className="language-latex"><_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{" = "}<_components.span className="token function selector">{"\\left"}</_components.span><_components.span className="token punctuation">{"["}</_components.span><_components.span className="token function selector">{"\\begin"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"array"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"\n  "}<_components.span className="token punctuation">{"{"}</_components.span>{"ccccc"}<_components.span className="token punctuation">{"}"}</_components.span>{"\n  x_"}<_components.span className="token punctuation">{"{"}</_components.span>{"11"}<_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" x_"}<_components.span className="token punctuation">{"{"}</_components.span>{"1k"}<_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" .  "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" .  "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" .  "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  x_"}<_components.span className="token punctuation">{"{"}</_components.span>{"n1"}<_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" . "}<_components.span className="token punctuation">{"&"}</_components.span>{" x_"}<_components.span className="token punctuation">{"{"}</_components.span>{"nn"}<_components.span className="token punctuation">{"}"}</_components.span>{"\n"}<_components.span className="token function selector">{"\\end"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"array"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\right"}</_components.span><_components.span className="token punctuation">{"]"}</_components.span>{" =\n"}<_components.span className="token function selector">{"\\left"}</_components.span><_components.span className="token punctuation">{"["}</_components.span><_components.span className="token function selector">{"\\begin"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"array"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"\n  "}<_components.span className="token punctuation">{"{"}</_components.span>{"c"}<_components.span className="token punctuation">{"}"}</_components.span>{"\n  "}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"x"}<_components.span className="token punctuation">{"}"}</_components.span>{"'_1 "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  . "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  "}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"x"}<_components.span className="token punctuation">{"}"}</_components.span>{"'_n\n"}<_components.span className="token function selector">{"\\end"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"array"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\right"}</_components.span><_components.span className="token punctuation">{"]"}</_components.span>{"\n"}</_components.code></_components.pre></_components.div>{"\n"}<_components.div className="math math-display">{"\\mathbf{X} = \\left[\\begin{array}\n  {ccccc}\n  x_{11} & . & . & . & x_{1k} \\\\\n  . & . & . & . & .  \\\\\n  . & . & . & . & .  \\\\\n  . & . & . & . & .  \\\\\n  x_{n1} & . & . & . & x_{nn}\n\\end{array}\\right] =\n\\left[\\begin{array}\n  {c}\n  \\mathbf{x}'_1 \\\\\n  . \\\\\n  . \\\\\n  . \\\\\n  \\mathbf{x}'_n\n\\end{array}\\right]"}</_components.div>{"\n"}<_components.p>{"The vector of error terms "}<_components.span className="math math-inline">{"\\mathbf{U}"}</_components.span>{" is also a "}<_components.span className="math math-inline">{"n \\times 1"}</_components.span>{" matrix."}</_components.p>{"\n"}<_components.p>{"At times it might be easier to use vector notation. For consistency, I will use the bold small x to denote a vector and capital letters to denote a matrix. Single observations are denoted by the subscript."}</_components.p>{"\n"}<_components.h2 id="least-squares">{"Least Squares"}</_components.h2>{"\n"}<_components.p><_components.strong>{"Start"}</_components.strong>{":"}<_components.br />{"\n"}<_components.span className="math math-inline">{"y_i = \\mathbf{x}'_i \\beta + u_i"}</_components.span></_components.p>{"\n"}<_components.p><_components.strong>{"Assumptions"}</_components.strong>{":"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li>{"Linearity (given above)"}</_components.li>{"\n"}<_components.li><_components.span className="math math-inline">{"E(\\mathbf{U}|\\mathbf{X}) = 0"}</_components.span>{" (conditional independence)"}</_components.li>{"\n"}<_components.li>{"rank("}<_components.span className="math math-inline">{"\\mathbf{X}"}</_components.span>{") = "}<_components.span className="math math-inline">{"k"}</_components.span>{" (no multi-collinearity i.e. full rank)"}</_components.li>{"\n"}<_components.li><_components.span className="math math-inline">{"Var(\\mathbf{U}|\\mathbf{X}) = \\sigma^2 I_n"}</_components.span>{" (Homoskedascity)"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"Aim"}</_components.strong>{":"}<_components.br />{"\n"}{"Find "}<_components.span className="math math-inline">{"\\beta"}</_components.span>{" that minimises the sum of squared errors:"}</_components.p>{"\n"}<_components.div className="math math-display">{"Q = \\sum_{i=1}^{n}{u_i^2} = \\sum_{i=1}^{n}{(y_i - \\mathbf{x}'_i\\beta)^2} = (Y-X\\beta)'(Y-X\\beta)"}</_components.div>{"\n"}<_components.p><_components.strong>{"Solution"}</_components.strong>{":"}<_components.br />{"\n"}{"Hints: "}<_components.span className="math math-inline">{"Q"}</_components.span>{" is a "}<_components.span className="math math-inline">{"1 \\times 1"}</_components.span>{" scalar, by symmetry "}<_components.span className="math math-inline">{"\\frac{\\partial b'Ab}{\\partial b} = 2Ab"}</_components.span>{"."}</_components.p>{"\n"}<_components.p>{"Take matrix derivative w.r.t "}<_components.span className="math math-inline">{"\\beta"}</_components.span>{":"}</_components.p>{"\n"}<_components.div className="remark-highlight"><_components.pre className="language-tex"><_components.code className="language-tex"><_components.span className="token function selector">{"\\begin"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"aligned"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"\n  "}<_components.span className="token function selector">{"\\min"}</_components.span>{" Q           "}<_components.span className="token punctuation">{"&"}</_components.span>{" = "}<_components.span className="token function selector">{"\\min"}</_components.span>{"_"}<_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token function selector">{"\\beta"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{" - 2"}<_components.span className="token function selector">{"\\beta"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{" +\n  "}<_components.span className="token function selector">{"\\beta"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\beta"}</_components.span>{" "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n                   "}<_components.span className="token punctuation">{"&"}</_components.span>{" = "}<_components.span className="token function selector">{"\\min"}</_components.span>{"_"}<_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token function selector">{"\\beta"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{" - 2"}<_components.span className="token function selector">{"\\beta"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{" + "}<_components.span className="token function selector">{"\\beta"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\beta"}</_components.span>{" "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  "}<_components.span className="token function selector">{"\\text"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token punctuation">{"["}</_components.span>{"FOC"}<_components.span className="token punctuation">{"]"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"~~~0 "}<_components.span className="token punctuation">{"&"}</_components.span>{" =  - 2"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{" + 2"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\hat"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token function selector">{"\\beta"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"                  "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n  "}<_components.span className="token function selector">{"\\hat"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token function selector">{"\\beta"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"      "}<_components.span className="token punctuation">{"&"}</_components.span>{" = ("}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{")^"}<_components.span className="token punctuation">{"{"}</_components.span>{"-1"}<_components.span className="token punctuation">{"}"}</_components.span><_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"X"}<_components.span className="token punctuation">{"}"}</_components.span>{"'"}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"Y"}<_components.span className="token punctuation">{"}"}</_components.span>{"                              "}<_components.span className="token function selector">{"\\\\"}</_components.span>{"\n                   "}<_components.span className="token punctuation">{"&"}</_components.span>{" = ("}<_components.span className="token function selector">{"\\sum"}</_components.span>{"^"}<_components.span className="token punctuation">{"{"}</_components.span>{"n"}<_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"x"}<_components.span className="token punctuation">{"}"}</_components.span>{"_i "}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"x"}<_components.span className="token punctuation">{"}"}</_components.span>{"'_i)^"}<_components.span className="token punctuation">{"{"}</_components.span>{"-1"}<_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token function selector">{"\\sum"}</_components.span>{"^"}<_components.span className="token punctuation">{"{"}</_components.span>{"n"}<_components.span className="token punctuation">{"}"}</_components.span>{" "}<_components.span className="token function selector">{"\\mathbf"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span>{"x"}<_components.span className="token punctuation">{"}"}</_components.span>{"_i y_i\n"}<_components.span className="token function selector">{"\\end"}</_components.span><_components.span className="token punctuation">{"{"}</_components.span><_components.span className="token keyword">{"aligned"}</_components.span><_components.span className="token punctuation">{"}"}</_components.span>{"\n"}</_components.code></_components.pre></_components.div>{"\n"}<_components.div className="math math-display">{"\\begin{aligned}\n  \\min Q           & = \\min_{\\beta} \\mathbf{Y}'\\mathbf{Y} - 2\\beta'\\mathbf{X}'\\mathbf{Y} +\n  \\beta'\\mathbf{X}'\\mathbf{X}\\beta \\\\\n                   & = \\min_{\\beta} - 2\\beta'\\mathbf{X}'\\mathbf{Y} + \\beta'\\mathbf{X}'\\mathbf{X}\\beta \\\\\n  \\text{[FOC]}~~~0 & =  - 2\\mathbf{X}'\\mathbf{Y} + 2\\mathbf{X}'\\mathbf{X}\\hat{\\beta}                  \\\\\n  \\hat{\\beta}      & = (\\mathbf{X}'\\mathbf{X})^{-1}\\mathbf{X}'\\mathbf{Y}                              \\\\\n                   & = (\\sum^{n} \\mathbf{x}_i \\mathbf{x}'_i)^{-1} \\sum^{n} \\mathbf{x}_i y_i\n\\end{aligned}"}</_components.div></>;
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
export default MDXContent;
